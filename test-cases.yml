---
- summary: |
    Проверка регистрации на сайте.
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте.
  prerequisites: |
    Открыта страница регистрации.
  test-data: |
    Логин = ilona Пароль = password Email = q1@ya.ru
  steps:
    - Вводим логин
    - Вводим пароль
    - Вводим email
    - Нажимаем кнопку «Зарегистрироваться»
  expected-result: |
    Пользователь успешно зарегистрирован и должен попасть на главную страницу сайта.

- summary: |
    Проверка авторизации на сайте.
  requirement: |
    Пользователь должен иметь возможность авторизоваться.
  prerequisites: |
    Открыта страница авторизации.
  test-data: |
    Пароль = password Email = q1@ya.ru
  steps:
    - Вводим пароль
    - Вводим email
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь успешно авторизовался и должен попасть на главную страницу сайта.

- summary: |
    Проверка авторизации на сайте с неправильным паролем или почтой.
  requirement: |
    Пользователь должен иметь возможность авторизоваться.
  prerequisites: |
    Открыта страница авторизации.
  test-data: |
    Пароль = password1 Email = q1w@ya.ru
  steps:
    - Вводим email
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Авторизация не удалась.

- summary: |
    Проверка возможности создать игру с ботом.
  requirement: |
    Пользователь должен иметь возможность создавать игры и играть с ботом или приглашать других игроков к участию в батле.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    нет
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем тип игры "С ботом"
    - Нажимаем кнопку «Создать битву».
  expected-result: |
    Игра началась.

- summary: |
    Проверка возможности выбрать уровень сложности игры.
  requirement: |
    Пользователь должен иметь возможность выбрать уровень сложности игры.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    нет
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем уровень сложности.
    - Выбираем тип игры "С ботом"
    - Выбираем задачу из списка или оставляем случайное задание.
    - Нажимаем кнопку «Создать битву».
  expected-result: |
    Игра началась.

- summary: |
    Проверка возможности пригласить в игру с друга.
  requirement: |
    Пользователь должен иметь возможность создавать игры и играть с ботом или приглашать других игроков к участию в батле.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    нет
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем тип игры "С другом"
    - Выбираем противника из списка.
    - Нажимаем кнопку «Создать приглашение».
  expected-result: |
    Приглашение создано и отправлено противнику, в поле общая информация появилось сообщение об этом.

- summary: |
    Проверка возможности создать игру с другими пользователями.
  requirement: |
    Пользователь должен иметь возможность создавать игры и играть с ботом или приглашать других игроков к участию в батле.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    нет
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем тип игры "С другими пользователями"
    - Нажимаем кнопку «Создать битву».
  expected-result: |
    Битва создана, ожидается подключение противника.

- summary: |
    Проверка победы при введении верного решения.
  requirement: |
    Пользователь должен иметь возможность создавать игры и играть с ботом или приглашать других игроков к участию в батле.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    Решение:
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
      return width * length;
    };

    module.exports = solution;
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем тип игры "С ботом"
    - Выбираем уровень сложности 1 звезда.
    - Выбираем задачу из списка rect_area.
    - Нажимаем кнопку «Создать битву».
    - Вводим в поле для кода решение.
    - Нажимаем кнопку "Запуск".
  expected-result: |
    Игра закончилась нашей победой.

- summary: |
    Проверка непринятия решения при введении ошибочного кода.
  requirement: |
    Пользователь должен иметь возможность создавать игры и играть с ботом или приглашать других игроков к участию в батле.
  prerequisites: |
    Пользователь авторизован, открыта главная страница.
  test-data: |
    Решение:
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
      return 123;
    };

    module.exports = solution;
  steps:
    - Нажимаем кнопку "Создать игру".
    - Выбираем тип игры "С ботом"
    - Выбираем уровень сложности 1 звезда.
    - Выбираем задачу из списка rect_area.
    - Нажимаем кнопку «Создать битву».
    - Вводим в поле для кода решение.
    - Нажимаем кнопку "Запуск".
  expected-result: |
    Тест непройден, игра продолжается.

- summary: |
    Проверка возможности видеть код соперника в реальном времени и результаты запуска тестов.
  requirement: |
    Пользователь должен иметь возможность видеть код соперника в реальном времени и результаты запуска тестов.
  prerequisites: |
    Запущена игра.
  test-data: |
    нет
  steps:
    - Наблюдаем за игрой соперника, вводом его решения и результатами запуска.
  expected-result: |
    На половине экрана соперника отображается код и результаты запуска.

- summary: |
    Проверка возможности участвовать в чате.
  requirement: |
    Пользователь должен иметь возможность участвовать в чате с соперником и зрителями.
  prerequisites: |
    Запущена игра.
  test-data: |
    нет
  steps:
    - В поле ввода сообщения набираем "Привет!".
    - Нажимаем кнопку "Отправить". 
  expected-result: |
    В чате появилось наше сообщение.

- summary: |
    Проверка возможности участвовать в игре без авторизации на сайте.
  requirement: |
    Пользователь должен иметь возможность участвовать в игре бе авторизации на сайте.
  prerequisites: |
    Открыта главная страница, пользователь не авторизован.
  test-data: |
    нет
  steps:
    - Нажимаем на кнопку "Попробуйте простую битву".
  expected-result: |
    Игра началась.

- summary: |
    Проверка возможности создавать новые задачи.
  requirement: |
    Пользователь должен иметь возможность создавать новые задачи.
  prerequisites: |
    Пользователь авторизован, открыта страница с задачами.
  test-data: |
    Задача: Тестинг
    Описание задачи: задача
    Тип входныого параметра: а (целое число)
    Тип выходного параметра: целое число 
    Примеры: [1] 1, [2] 2, [3] 3.
  steps:
    - Нажимаем кнопку создать новую задачу.
    - Зааполняем необходимые поля.
    - Нажимаем сохранить.
  expected-result: |
    Задача создана. 

- summary: |
    Проверка возможности создавать свой турнир.
  requirement: |
    Пользователь может устраивать свои турниры.
  prerequisites: |
    Пользователь авторизован, открыта страница с турнирами.
  test-data: |
    нет
  steps:
    - Нажимаем кнопку "Создать", оставляя введенные данные по умолчанию или введя свои.
  expected-result: |
    Турнир создан. 
 
- summary: |
    Проверка скорости работы сайта.
  requirement: |
    Веб-сайт должен быть разработан с учетом удобства использования и оптимизирован для скорости работы.
  prerequisites: |
    -
  test-data: |
    нет
  steps:
    - открываем DevTools, вкладка Network
    - меняем No throttling на Slow 3G
  expected-result: |
    Страница отображается полностью.

- summary: |
    Проверка доступности сайта на различных устройствах.
  requirement: |
    Сайт должен быть удобен в использовании на мобильном устройстве.
  prerequisites: |
    -
  test-data: |
    нет
  steps:
    - открываем сайт на мобильном телефоне.
  expected-result: |
    Сайт открылся корректно на телефоне.

- summary: |
    Проверка наличия шифрования HTTPS.
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    -
  test-data: |
    нет
  steps:
    - Проверяем в поле адресной строки браузера протокол передачи данных.
  expected-result: |
    Протокол передачи должен быть HTTPS.

- summary: |
    Проверка кроссбраузерности.
  requirement: |
    Сайт нужно протестировать на совместимость с последними версиями браузеров.
  prerequisites: |
    Наличие на устройстве браузеров Google Chrome, Safari, Firefox поледних версий.
  test-data: |
    нет
  steps:
    - Открываем сайт в трех браузерах.
  expected-result: |
    Сайт открылся без ошибок.
